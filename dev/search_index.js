var documenterSearchIndex = {"docs":
[{"location":"storage_types/","page":"Storage types","title":"Storage types","text":"CurrentModule = ReferenceFiniteElements","category":"page"},{"location":"storage_types/#Storage-types","page":"Storage types","title":"Storage types","text":"","category":"section"},{"location":"storage_types/","page":"Storage types","title":"Storage types","text":"There are different storage types available for the main type ReferenceFE beyond the default settings of StructArrays composed of StaticArrays. To use these default types we can use the following optional keyword arguments in the constructors as follows","category":"page"},{"location":"storage_types/","page":"Storage types","title":"Storage types","text":"using ReferenceFiniteElements\nusing StaticArrays\n\nre = ReferenceFE(\n  Hex8(2); \n  int_type=Int64, float_type=Float64, \n  array_type=MArray, storage_type=Array\n)\n\n# output\n\nReferenceFE\n  Element type                = Hex8{8}\n  Dimension                   = 3\n  Number of nodes             = 8\n  Number of quadrature points = 8\n  Integer type                = Int64\n  Float type                  = Float64\n  Nodal coordinates type      = Matrix{Float64}\n  Edge nodes type             = Matrix{Int64}\n  Face nodes type             = Matrix{Int64}\n  Interior nodes type         = Vector{Int64}\n  Interpolants type           = Interpolants{MArray, MArray, MArray}\n","category":"page"},{"location":"storage_types/","page":"Storage types","title":"Storage types","text":"The example above now uses mutable MArrays rather than the default of SArray. The storage type is also now a Vector of MArrays rather than a StructArray of MArrays. The currently supported internal array types are Array, MArray, and SArray. The currently supported storage types are Array and StructArray.","category":"page"},{"location":"quick_start/","page":"Quick start","title":"Quick start","text":"CurrentModule = ReferenceFiniteElements","category":"page"},{"location":"quick_start/#Quckstart","page":"Quick start","title":"Quckstart","text":"","category":"section"},{"location":"quick_start/","page":"Quick start","title":"Quick start","text":"To setup a finite element you can do the following with a 8 node hexahedral element with a second order quadrature rule (8 integration points) used as an example below","category":"page"},{"location":"quick_start/","page":"Quick start","title":"Quick start","text":"using ReferenceFiniteElements\nre = ReferenceFE(Hex8(2))\n\n# output\n\nReferenceFE\n  Element type                = Hex8{8}\n  Dimension                   = 3\n  Number of nodes             = 8\n  Number of quadrature points = 8\n  Integer type                = Int64\n  Float type                  = Float64\n  Nodal coordinates type      = Matrix{Float64}\n  Edge nodes type             = Matrix{Int64}\n  Face nodes type             = Matrix{Int64}\n  Interior nodes type         = Vector{Int64}\n  Interpolants type           = StructArray{Interpolants}\n","category":"page"},{"location":"quick_start/","page":"Quick start","title":"Quick start","text":"To do something useful with our finite element we can look at the quadrature points. To get all the quadrature points, use the following method","category":"page"},{"location":"quick_start/","page":"Quick start","title":"Quick start","text":"ξs = quadrature_points(re)\n\n# output\n\n8-element Vector{StaticArraysCore.SVector{3, Float64}}:\n [-0.5773502691896258, -0.5773502691896258, -0.5773502691896258]\n [0.5773502691896258, -0.5773502691896258, -0.5773502691896258]\n [-0.5773502691896258, 0.5773502691896258, -0.5773502691896258]\n [0.5773502691896258, 0.5773502691896258, -0.5773502691896258]\n [-0.5773502691896258, -0.5773502691896258, 0.5773502691896258]\n [0.5773502691896258, -0.5773502691896258, 0.5773502691896258]\n [-0.5773502691896258, 0.5773502691896258, 0.5773502691896258]\n [0.5773502691896258, 0.5773502691896258, 0.5773502691896258]\n","category":"page"},{"location":"quick_start/","page":"Quick start","title":"Quick start","text":"To get a specific quadrature point, say the first point, we can use an analogous method as follows","category":"page"},{"location":"quick_start/","page":"Quick start","title":"Quick start","text":"ξ = quadrature_points(re, 1)\n\n# output\n\n3-element StaticArraysCore.SVector{3, Float64} with indices SOneTo(3):\n -0.5773502691896258\n -0.5773502691896258\n -0.5773502691896258\n","category":"page"},{"location":"quick_start/","page":"Quick start","title":"Quick start","text":"There are similar methods for the quadrature weights. See below.","category":"page"},{"location":"quick_start/","page":"Quick start","title":"Quick start","text":"ws = quadrature_weights(re)\n\n# output\n\n8-element Vector{Float64}:\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n","category":"page"},{"location":"quick_start/","page":"Quick start","title":"Quick start","text":"w = quadrature_weights(re, 1)\n\n# output\n\n1.0\n","category":"page"},{"location":"quick_start/","page":"Quick start","title":"Quick start","text":"For the shape function values we can access these via the following methods","category":"page"},{"location":"quick_start/","page":"Quick start","title":"Quick start","text":"Ns = shape_function_values(re)\n\n# output\n\n8-element Vector{StaticArraysCore.SVector{8, Float64}}:\n [0.4905626121623441, 0.13144585576580212, 0.035220810900864506, 0.13144585576580212, 0.13144585576580212, 0.035220810900864506, 0.009437387837655926, 0.035220810900864506]\n [0.13144585576580212, 0.4905626121623441, 0.13144585576580212, 0.035220810900864506, 0.035220810900864506, 0.13144585576580212, 0.035220810900864506, 0.009437387837655926]\n [0.13144585576580212, 0.035220810900864506, 0.13144585576580212, 0.4905626121623441, 0.035220810900864506, 0.009437387837655926, 0.035220810900864506, 0.13144585576580212]\n [0.035220810900864506, 0.13144585576580212, 0.4905626121623441, 0.13144585576580212, 0.009437387837655926, 0.035220810900864506, 0.13144585576580212, 0.035220810900864506]\n [0.13144585576580212, 0.035220810900864506, 0.009437387837655926, 0.035220810900864506, 0.4905626121623441, 0.13144585576580212, 0.035220810900864506, 0.13144585576580212]\n [0.035220810900864506, 0.13144585576580212, 0.035220810900864506, 0.009437387837655926, 0.13144585576580212, 0.4905626121623441, 0.13144585576580212, 0.035220810900864506]\n [0.035220810900864506, 0.009437387837655926, 0.035220810900864506, 0.13144585576580212, 0.13144585576580212, 0.035220810900864506, 0.13144585576580212, 0.4905626121623441]\n [0.009437387837655926, 0.035220810900864506, 0.13144585576580212, 0.035220810900864506, 0.035220810900864506, 0.13144585576580212, 0.4905626121623441, 0.13144585576580212]\n\n","category":"page"},{"location":"quick_start/","page":"Quick start","title":"Quick start","text":"N = shape_function_values(re, 1)\n\n# output\n\n8-element StaticArraysCore.SVector{8, Float64} with indices SOneTo(8):\n 0.4905626121623441\n 0.13144585576580212\n 0.035220810900864506\n 0.13144585576580212\n 0.13144585576580212\n 0.035220810900864506\n 0.009437387837655926\n 0.035220810900864506\n\n","category":"page"},{"location":"quick_start/","page":"Quick start","title":"Quick start","text":"For shape function gradients, the method calls are as follows","category":"page"},{"location":"quick_start/","page":"Quick start","title":"Quick start","text":"∇N_ξ = shape_function_gradients(re)\n\n# output\n\n8-element Vector{StaticArraysCore.SMatrix{8, 3, Float64, 24}}:\n [-0.3110042339640731 -0.3110042339640731 -0.3110042339640731; 0.3110042339640731 -0.08333333333333331 -0.08333333333333331; … ; 0.022329099369260218 0.022329099369260218 0.022329099369260218; -0.022329099369260218 0.08333333333333331 0.08333333333333331]\n [-0.3110042339640731 -0.08333333333333331 -0.08333333333333331; 0.3110042339640731 -0.3110042339640731 -0.3110042339640731; … ; 0.022329099369260218 0.08333333333333331 0.08333333333333331; -0.022329099369260218 0.022329099369260218 0.022329099369260218]\n [-0.08333333333333331 -0.3110042339640731 -0.08333333333333331; 0.08333333333333331 -0.08333333333333331 -0.022329099369260218; … ; 0.08333333333333331 0.022329099369260218 0.08333333333333331; -0.08333333333333331 0.08333333333333331 0.3110042339640731]\n [-0.08333333333333331 -0.08333333333333331 -0.022329099369260218; 0.08333333333333331 -0.3110042339640731 -0.08333333333333331; … ; 0.08333333333333331 0.08333333333333331 0.3110042339640731; -0.08333333333333331 0.022329099369260218 0.08333333333333331]\n [-0.08333333333333331 -0.08333333333333331 -0.3110042339640731; 0.08333333333333331 -0.022329099369260218 -0.08333333333333331; … ; 0.08333333333333331 0.08333333333333331 0.022329099369260218; -0.08333333333333331 0.3110042339640731 0.08333333333333331]\n [-0.08333333333333331 -0.022329099369260218 -0.08333333333333331; 0.08333333333333331 -0.08333333333333331 -0.3110042339640731; … ; 0.08333333333333331 0.3110042339640731 0.08333333333333331; -0.08333333333333331 0.08333333333333331 0.022329099369260218]\n [-0.022329099369260218 -0.08333333333333331 -0.08333333333333331; 0.022329099369260218 -0.022329099369260218 -0.022329099369260218; … ; 0.3110042339640731 0.08333333333333331 0.08333333333333331; -0.3110042339640731 0.3110042339640731 0.3110042339640731]\n [-0.022329099369260218 -0.022329099369260218 -0.022329099369260218; 0.022329099369260218 -0.08333333333333331 -0.08333333333333331; … ; 0.3110042339640731 0.3110042339640731 0.3110042339640731; -0.3110042339640731 0.08333333333333331 0.08333333333333331]\n","category":"page"},{"location":"quick_start/","page":"Quick start","title":"Quick start","text":"∇N_ξ = shape_function_gradients(re, 1)\n\n# output\n\n8×3 StaticArraysCore.SMatrix{8, 3, Float64, 24} with indices SOneTo(8)×SOneTo(3):\n -0.311004   -0.311004   -0.311004\n  0.311004   -0.0833333  -0.0833333\n  0.0833333   0.0833333  -0.0223291\n -0.0833333   0.311004   -0.0833333\n -0.0833333  -0.0833333   0.311004\n  0.0833333  -0.0223291   0.0833333\n  0.0223291   0.0223291   0.0223291\n -0.0223291   0.0833333   0.0833333\n","category":"page"},{"location":"quick_start/","page":"Quick start","title":"Quick start","text":"For shape function hessians, the method calls are as follows","category":"page"},{"location":"quick_start/","page":"Quick start","title":"Quick start","text":"∇∇N_ξ = shape_function_hessians(re)\n\n# output\n\n8-element Vector{StaticArraysCore.SArray{Tuple{8, 3, 3}, Float64, 3, 72}}:\n [0.0 0.19716878364870322 0.19716878364870322; 0.0 -0.19716878364870322 -0.19716878364870322; … ; 0.0 0.05283121635129677 0.05283121635129677; 0.0 -0.05283121635129677 -0.05283121635129677;;; 0.19716878364870322 0.0 0.19716878364870322; -0.19716878364870322 0.0 0.05283121635129677; … ; 0.05283121635129677 0.0 0.05283121635129677; -0.05283121635129677 0.0 0.19716878364870322;;; 0.19716878364870322 0.19716878364870322 0.0; -0.19716878364870322 0.05283121635129677 0.0; … ; 0.05283121635129677 0.05283121635129677 0.0; -0.05283121635129677 0.19716878364870322 0.0]\n [0.0 0.19716878364870322 0.19716878364870322; 0.0 -0.19716878364870322 -0.19716878364870322; … ; 0.0 0.05283121635129677 0.05283121635129677; 0.0 -0.05283121635129677 -0.05283121635129677;;; 0.19716878364870322 0.0 0.05283121635129677; -0.19716878364870322 0.0 0.19716878364870322; … ; 0.05283121635129677 0.0 0.19716878364870322; -0.05283121635129677 0.0 0.05283121635129677;;; 0.19716878364870322 0.05283121635129677 0.0; -0.19716878364870322 0.19716878364870322 0.0; … ; 0.05283121635129677 0.19716878364870322 0.0; -0.05283121635129677 0.05283121635129677 0.0]\n [0.0 0.19716878364870322 0.05283121635129677; 0.0 -0.19716878364870322 -0.05283121635129677; … ; 0.0 0.05283121635129677 0.19716878364870322; 0.0 -0.05283121635129677 -0.19716878364870322;;; 0.19716878364870322 0.0 0.19716878364870322; -0.19716878364870322 0.0 0.05283121635129677; … ; 0.05283121635129677 0.0 0.05283121635129677; -0.05283121635129677 0.0 0.19716878364870322;;; 0.05283121635129677 0.19716878364870322 0.0; -0.05283121635129677 0.05283121635129677 0.0; … ; 0.19716878364870322 0.05283121635129677 0.0; -0.19716878364870322 0.19716878364870322 0.0]\n [0.0 0.19716878364870322 0.05283121635129677; 0.0 -0.19716878364870322 -0.05283121635129677; … ; 0.0 0.05283121635129677 0.19716878364870322; 0.0 -0.05283121635129677 -0.19716878364870322;;; 0.19716878364870322 0.0 0.05283121635129677; -0.19716878364870322 0.0 0.19716878364870322; … ; 0.05283121635129677 0.0 0.19716878364870322; -0.05283121635129677 0.0 0.05283121635129677;;; 0.05283121635129677 0.05283121635129677 0.0; -0.05283121635129677 0.19716878364870322 0.0; … ; 0.19716878364870322 0.19716878364870322 0.0; -0.19716878364870322 0.05283121635129677 0.0]\n [0.0 0.05283121635129677 0.19716878364870322; 0.0 -0.05283121635129677 -0.19716878364870322; … ; 0.0 0.19716878364870322 0.05283121635129677; 0.0 -0.19716878364870322 -0.05283121635129677;;; 0.05283121635129677 0.0 0.19716878364870322; -0.05283121635129677 0.0 0.05283121635129677; … ; 0.19716878364870322 0.0 0.05283121635129677; -0.19716878364870322 0.0 0.19716878364870322;;; 0.19716878364870322 0.19716878364870322 0.0; -0.19716878364870322 0.05283121635129677 0.0; … ; 0.05283121635129677 0.05283121635129677 0.0; -0.05283121635129677 0.19716878364870322 0.0]\n [0.0 0.05283121635129677 0.19716878364870322; 0.0 -0.05283121635129677 -0.19716878364870322; … ; 0.0 0.19716878364870322 0.05283121635129677; 0.0 -0.19716878364870322 -0.05283121635129677;;; 0.05283121635129677 0.0 0.05283121635129677; -0.05283121635129677 0.0 0.19716878364870322; … ; 0.19716878364870322 0.0 0.19716878364870322; -0.19716878364870322 0.0 0.05283121635129677;;; 0.19716878364870322 0.05283121635129677 0.0; -0.19716878364870322 0.19716878364870322 0.0; … ; 0.05283121635129677 0.19716878364870322 0.0; -0.05283121635129677 0.05283121635129677 0.0]\n [0.0 0.05283121635129677 0.05283121635129677; 0.0 -0.05283121635129677 -0.05283121635129677; … ; 0.0 0.19716878364870322 0.19716878364870322; 0.0 -0.19716878364870322 -0.19716878364870322;;; 0.05283121635129677 0.0 0.19716878364870322; -0.05283121635129677 0.0 0.05283121635129677; … ; 0.19716878364870322 0.0 0.05283121635129677; -0.19716878364870322 0.0 0.19716878364870322;;; 0.05283121635129677 0.19716878364870322 0.0; -0.05283121635129677 0.05283121635129677 0.0; … ; 0.19716878364870322 0.05283121635129677 0.0; -0.19716878364870322 0.19716878364870322 0.0]\n [0.0 0.05283121635129677 0.05283121635129677; 0.0 -0.05283121635129677 -0.05283121635129677; … ; 0.0 0.19716878364870322 0.19716878364870322; 0.0 -0.19716878364870322 -0.19716878364870322;;; 0.05283121635129677 0.0 0.05283121635129677; -0.05283121635129677 0.0 0.19716878364870322; … ; 0.19716878364870322 0.0 0.19716878364870322; -0.19716878364870322 0.0 0.05283121635129677;;; 0.05283121635129677 0.05283121635129677 0.0; -0.05283121635129677 0.19716878364870322 0.0; … ; 0.19716878364870322 0.19716878364870322 0.0; -0.19716878364870322 0.05283121635129677 0.0]\n","category":"page"},{"location":"quick_start/","page":"Quick start","title":"Quick start","text":"∇∇N_ξ = shape_function_hessians(re, 1)\n\n# output\n\n8×3×3 StaticArraysCore.SArray{Tuple{8, 3, 3}, Float64, 3, 72} with indices SOneTo(8)×SOneTo(3)×SOneTo(3):\n[:, :, 1] =\n 0.0   0.197169    0.197169\n 0.0  -0.197169   -0.197169\n 0.0   0.197169   -0.0528312\n 0.0  -0.197169    0.0528312\n 0.0   0.0528312  -0.197169\n 0.0  -0.0528312   0.197169\n 0.0   0.0528312   0.0528312\n 0.0  -0.0528312  -0.0528312\n\n[:, :, 2] =\n  0.197169   0.0   0.197169\n -0.197169   0.0   0.0528312\n  0.197169   0.0  -0.0528312\n -0.197169   0.0  -0.197169\n  0.0528312  0.0  -0.197169\n -0.0528312  0.0  -0.0528312\n  0.0528312  0.0   0.0528312\n -0.0528312  0.0   0.197169\n\n[:, :, 3] =\n  0.197169    0.197169   0.0\n -0.197169    0.0528312  0.0\n -0.0528312  -0.0528312  0.0\n  0.0528312  -0.197169   0.0\n -0.197169   -0.197169   0.0\n  0.197169   -0.0528312  0.0\n  0.0528312   0.0528312  0.0\n -0.0528312   0.197169   0.0\n","category":"page"},{"location":"developer/","page":"Developer","title":"Developer","text":"CurrentModule = ReferenceFiniteElements","category":"page"},{"location":"developer/#How-to-add-a-new-element-type","page":"Developer","title":"How to add a new element type","text":"","category":"section"},{"location":"developer/","page":"Developer","title":"Developer","text":"To add a new finite element there's a few things we need to do. First, we may need to define an abstract type if the element type is not a currently supported abstract element topology. The currently supported abstract element topologies are   ","category":"page"},{"location":"developer/","page":"Developer","title":"Developer","text":"AbstractEdge\nAbstractHex\nAbstractQuad\nAbstractTet\nAbstractTri","category":"page"},{"location":"developer/","page":"Developer","title":"Developer","text":"We'll use a Tri3 element as an example of how to add a new element type.","category":"page"},{"location":"developer/","page":"Developer","title":"Developer","text":"First, let's pretend AbstractTri doesn't exist yet. The first thing we need to do is define the following abstract type","category":"page"},{"location":"developer/","page":"Developer","title":"Developer","text":"abstract type AbstractTri{N, D, Q} <: RefenceFEType{N, D, Q} end","category":"page"},{"location":"developer/","page":"Developer","title":"Developer","text":"The three parameters N, D, and Q are the number of nodes, the number of dimensions, and the number of quadrature points for an element implementation. For a given element topology, such as a three noded triangle in this example, N and D will be fixed parameters while we allow for Q to be variable, i.e. have potentially different quadrature rules on the element. ","category":"page"},{"location":"developer/","page":"Developer","title":"Developer","text":"Now we define a struct for specific implementations. Here we'll define the Tri3 struct.","category":"page"},{"location":"developer/","page":"Developer","title":"Developer","text":"struct Tri3{Q} <: AbstractTri{3, 2, Q}\n  degree::Int\nend","category":"page"},{"location":"developer/","page":"Developer","title":"Developer","text":"Here we have fixed N and D to be 3 and 2 respectively while Q is left as a parametric type. The struct has one field, degree, which denotes the degree of the quadrature rule. Other element rules could have more parameters depending upon how interpolation and integration are performed. ","category":"page"},{"location":"developer/","page":"Developer","title":"Developer","text":"We can also define some type stable constructors for different quadrature degrees. This look like the following","category":"page"},{"location":"developer/","page":"Developer","title":"Developer","text":"Tri3(::Val{1}) = Tri3{1}(1)\nTri3(::Val{2}) = Tri3{3}(2)","category":"page"},{"location":"developer/","page":"Developer","title":"Developer","text":"for quadrature degrees of 1 and 2 respectively. The numbers 1 and 3 correspond to the number of quadrature points in each rule.","category":"page"},{"location":"developer/","page":"Developer","title":"Developer","text":"Now that we have a basic type to represent our element topology defined, there's a few methods we need to define for setup purposes. These methods are","category":"page"},{"location":"developer/","page":"Developer","title":"Developer","text":"quadrature_points_and_weights\nelement_stencil\nshape_function_values\nshape_funciton_gradients\nshape_function_hessians","category":"page"},{"location":"developer/","page":"Developer","title":"Developer","text":"Below is the implementaiton of element_stencial for AbstractTri elements","category":"page"},{"location":"developer/","page":"Developer","title":"Developer","text":"function quadrature_points_and_weights(e::E, ::Type{A}, ::Type{T}) where {\n  A <: Union{SVector, MVector}, T <: Number, E <: AbstractTri\n}\n\n  D = num_dimensions(e)\n\n  if degree(e) == 1\n    ξs    = Vector{A{D, T}}(undef, 1)\n    ξs[1] = A{D, T}(1. / 3., 1. / 3.)\n    ws    = T[0.5]\n  elseif degree(e) == 2\n    ξs    = Vector{A{D, T}}(undef, 3)\n    ξs[1] = A{D, T}(2. / 3., 1. / 6.)\n    ξs[2] = A{D, T}(1. / 6., 2. / 3.)\n    ξs[3] = A{D, T}(1. / 6., 1. / 6.)\n    ws    = T[1. / 6., 1. / 6., 1. / 6.]\n  end\n  return ξs, ws\nend","category":"page"},{"location":"developer/","page":"Developer","title":"Developer","text":"Two different quadature rules, degree = 1 and degree = 2 are supported. The degree = 1 case we could refer to as \"fully integrated.\"","category":"page"},{"location":"developer/","page":"Developer","title":"Developer","text":"The implementation of element_stencil for Tri3 elements is shown below","category":"page"},{"location":"developer/","page":"Developer","title":"Developer","text":"function element_stencil(::Tri3, ::Type{Itype}, ::Type{Ftype}) where {Itype <: Integer, Ftype <: AbstractFloat}\n  nodal_coordinates = Ftype[\n    0.0 1.0 0.0;\n    0.0 0.0 1.0\n  ]\n  edge_nodes = Itype[\n    1 2 3\n    2 3 1\n  ]\n  face_nodes = Itype[;;]\n  interior_nodes = Vector{Itype}(undef, 0)\n  return nodal_coordinates, edge_nodes, face_nodes, interior_nodes\nend","category":"page"},{"location":"developer/","page":"Developer","title":"Developer","text":"The implementation of shape_function_values for Tri3 elements is shown below","category":"page"},{"location":"developer/","page":"Developer","title":"Developer","text":"function shape_function_values(e::Tri3, ::Type{A1}, ξ::A2) where {\n  A1 <: Union{SVector, MVector}, A2 <: AbstractArray{<:Number, 1}\n}\n  N = A1{num_nodes(e), eltype(ξ)}(\n    1. - ξ[1] - ξ[2],\n    ξ[1],\n    ξ[2]\n  )\nend","category":"page"},{"location":"developer/","page":"Developer","title":"Developer","text":"The implementation of shape_function_gradients for Tri3 elements is shown below","category":"page"},{"location":"developer/","page":"Developer","title":"Developer","text":"function shape_function_gradients(e::Tri3, ::Type{A1}, ξ::A2) where {\n  A1 <: Union{SMatrix, MMatrix}, A2 <: AbstractArray{<:Number, 1}\n}\n  ∇N_ξ = A1{num_nodes(e), num_dimensions(e), eltype(ξ), num_nodes(e) * num_dimensions(e)}(\n    -1., 1., 0.,\n    -1., 0., 1.\n  )\nend","category":"page"},{"location":"developer/","page":"Developer","title":"Developer","text":"The implementation of shape_function_hessians for Tri3 elements is shown below","category":"page"},{"location":"developer/","page":"Developer","title":"Developer","text":"function shape_function_hessians(e::Tri3, ::Type{A1}, ξ::A2) where {\n  A1 <: Union{SArray, MArray}, A2 <: AbstractArray{<:Number, 1}\n}\n  N, D = num_nodes(e), num_dimensions(e)\n  ∇∇N_ξ = zeros(A1{Tuple{N, D, D}, eltype(ξ), 3, N * D * D})\nend","category":"page"},{"location":"developer/","page":"Developer","title":"Developer","text":"As a convention, all of the interpolation methods for every element type are defined with StaticArrays as the default array type. Internally, when other array types are requested, these arrays are converted to the requested type. This allows for allocations on setup only for those array types that require it. ","category":"page"},{"location":"developer/","page":"Developer","title":"Developer","text":"Another thing to note is for all existing elements defined in the package, the quadrature_points_and_weights method is defined on abstract types. This could change in the future, but is the current convention. ","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"CurrentModule = ReferenceFiniteElements","category":"page"},{"location":"installation/#ReferenceFiniteElements","page":"Installation","title":"ReferenceFiniteElements","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"Documentation for ReferenceFiniteElements.","category":"page"},{"location":"installation/#Installation","page":"Installation","title":"Installation","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"To use ReferenceFiniteElements first install it via the package manager via the following command","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"pkg> add ReferenceFiniteElements","category":"page"},{"location":"","page":"Index","title":"Index","text":"CurrentModule = ReferenceFiniteElements","category":"page"},{"location":"","page":"Index","title":"Index","text":"","category":"page"},{"location":"","page":"Index","title":"Index","text":"Modules = [ReferenceFiniteElements]","category":"page"},{"location":"#ReferenceFiniteElements.AbstractHex","page":"Index","title":"ReferenceFiniteElements.AbstractHex","text":"\n\n\n\n","category":"type"},{"location":"#ReferenceFiniteElements.AbstractQuad","page":"Index","title":"ReferenceFiniteElements.AbstractQuad","text":"\n\n\n\n","category":"type"},{"location":"#ReferenceFiniteElements.AbstractTet","page":"Index","title":"ReferenceFiniteElements.AbstractTet","text":"\n\n\n\n","category":"type"},{"location":"#ReferenceFiniteElements.AbstractTri","page":"Index","title":"ReferenceFiniteElements.AbstractTri","text":"\n\n\n\n","category":"type"},{"location":"#ReferenceFiniteElements.Edge","page":"Index","title":"ReferenceFiniteElements.Edge","text":"TODO fix the 1 below and make multiple edge types maybe?\n\n\n\n\n\n","category":"type"},{"location":"#ReferenceFiniteElements.Hex8","page":"Index","title":"ReferenceFiniteElements.Hex8","text":"degree::Int64\n\n\n\n\n\n","category":"type"},{"location":"#ReferenceFiniteElements.Interpolants","page":"Index","title":"ReferenceFiniteElements.Interpolants","text":"ξ::Any\nw::Any\nN::Any\n∇N_ξ::Any\n∇∇N_ξ::Any\n\nInterpolant container for a single quadrature point\n\n\n\n\n\n","category":"type"},{"location":"#ReferenceFiniteElements.Quad4","page":"Index","title":"ReferenceFiniteElements.Quad4","text":"degree::Int64\n\n\n\n\n\n","category":"type"},{"location":"#ReferenceFiniteElements.Quad9","page":"Index","title":"ReferenceFiniteElements.Quad9","text":"degree::Int64\n\n\n\n\n\n","category":"type"},{"location":"#ReferenceFiniteElements.ReferenceFE","page":"Index","title":"ReferenceFiniteElements.ReferenceFE","text":"ref_fe_type::ReferenceFiniteElements.ReferenceFEType\nnodal_coordinates::AbstractVecOrMat\nedge_nodes::AbstractMatrix\nface_nodes::AbstractMatrix\ninterior_nodes::AbstractVector\ninterpolants::Any\n\nReferenceFE is the main type. \n\nThis type defines the nodal coordinates, face nodes, interior nodes and interpolants\n\n\n\n\n\n","category":"type"},{"location":"#ReferenceFiniteElements.ReferenceFE-Union{Tuple{ReferenceFiniteElements.ReferenceFEType{N, D, Q}}, Tuple{Q}, Tuple{D}, Tuple{N}} where {N, D, Q}","page":"Index","title":"ReferenceFiniteElements.ReferenceFE","text":"Constructor for ReferenceFE\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.ReferenceFEType","page":"Index","title":"ReferenceFiniteElements.ReferenceFEType","text":"Type to define new element shapes\n\n\n\n\n\n","category":"type"},{"location":"#ReferenceFiniteElements.SimplexTri","page":"Index","title":"ReferenceFiniteElements.SimplexTri","text":"n_nodes::Int64\ndegree::Int64\n\n\n\n\n\n","category":"type"},{"location":"#ReferenceFiniteElements.Tet10","page":"Index","title":"ReferenceFiniteElements.Tet10","text":"degree::Int64\n\n\n\n\n\n","category":"type"},{"location":"#ReferenceFiniteElements.Tet4","page":"Index","title":"ReferenceFiniteElements.Tet4","text":"degree::Int64\n\n\n\n\n\n","category":"type"},{"location":"#ReferenceFiniteElements.Tri3","page":"Index","title":"ReferenceFiniteElements.Tri3","text":"degree::Int64\n\n\n\n\n\n","category":"type"},{"location":"#ReferenceFiniteElements.Tri6","page":"Index","title":"ReferenceFiniteElements.Tri6","text":"degree::Int64\n\n\n\n\n\n","category":"type"},{"location":"#Base.show-Tuple{IO, ReferenceFE}","page":"Index","title":"Base.show","text":"show(io::IO, e::ReferenceFE)\n\n\nshow(io, e)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/ReferenceFEs.jl:50.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.degree-Tuple{ReferenceFiniteElements.ReferenceFEType}","page":"Index","title":"ReferenceFiniteElements.degree","text":"degree(e::ReferenceFiniteElements.ReferenceFEType) -> Any\n\n\nReturns the quadrature degree of a ReferenceFEType\n\ndegree(e)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/ReferenceFETypes.jl:10.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.edges-Tuple{ReferenceFE}","page":"Index","title":"ReferenceFiniteElements.edges","text":"edges(e::ReferenceFE)\n\n\nReturns the edge list\n\nedges(e)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/ReferenceFEs.jl:174.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.element_stencil-Union{Tuple{Ftype}, Tuple{Itype}, Tuple{Hex8, Type{Itype}, Type{Ftype}}} where {Itype<:Integer, Ftype<:AbstractFloat}","page":"Index","title":"ReferenceFiniteElements.element_stencil","text":"element_stencil(\n    _::Hex8,\n    _::Type{Itype<:Integer},\n    _::Type{Ftype<:AbstractFloat}\n) -> Tuple{Matrix, Matrix, Matrix, Vector}\n\n\nelement_stencil(_, _, _)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/implementations/Hex8.jl:3.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.element_stencil-Union{Tuple{Ftype}, Tuple{Itype}, Tuple{Quad4, Type{Itype}, Type{Ftype}}} where {Itype<:Integer, Ftype<:AbstractFloat}","page":"Index","title":"ReferenceFiniteElements.element_stencil","text":"element_stencil(\n    _::Quad4,\n    _::Type{Itype<:Integer},\n    _::Type{Ftype<:AbstractFloat}\n) -> Tuple{Matrix, Matrix, Any, Vector}\n\n\nelement_stencil(_, _, _)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/implementations/Quad4.jl:3.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.element_stencil-Union{Tuple{Ftype}, Tuple{Itype}, Tuple{Quad9, Type{Itype}, Type{Ftype}}} where {Itype<:Integer, Ftype<:AbstractFloat}","page":"Index","title":"ReferenceFiniteElements.element_stencil","text":"element_stencil(\n    _::Quad9,\n    _::Type{Itype<:Integer},\n    _::Type{Ftype<:AbstractFloat}\n) -> Tuple{Matrix, Matrix, Any, Vector}\n\n\nelement_stencil(_, _, _)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/implementations/Quad9.jl:3.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.element_stencil-Union{Tuple{Ftype}, Tuple{Itype}, Tuple{SimplexTri, Type{Itype}, Type{Ftype}}} where {Itype<:Integer, Ftype<:AbstractFloat}","page":"Index","title":"ReferenceFiniteElements.element_stencil","text":"element_stencil(\n    e::SimplexTri,\n    _::Type{Itype<:Integer},\n    _::Type{Ftype<:AbstractFloat}\n) -> Tuple{Matrix, Any, Any, Any}\n\n\nelement_stencil(e, _, _)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/implementations/SimplexTri.jl:3.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.element_stencil-Union{Tuple{Ftype}, Tuple{Itype}, Tuple{Tet10, Type{Itype}, Type{Ftype}}} where {Itype<:Integer, Ftype<:AbstractFloat}","page":"Index","title":"ReferenceFiniteElements.element_stencil","text":"element_stencil(\n    _::Tet10,\n    _::Type{Itype<:Integer},\n    _::Type{Ftype<:AbstractFloat}\n) -> Tuple{Matrix, Matrix, Matrix, Vector}\n\n\nelement_stencil(_, _, _)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/implementations/Tet10.jl:3.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.element_stencil-Union{Tuple{Ftype}, Tuple{Itype}, Tuple{Tet4, Type{Itype}, Type{Ftype}}} where {Itype<:Integer, Ftype<:AbstractFloat}","page":"Index","title":"ReferenceFiniteElements.element_stencil","text":"element_stencil(\n    _::Tet4,\n    _::Type{Itype<:Integer},\n    _::Type{Ftype<:AbstractFloat}\n) -> Tuple{Matrix, Matrix, Matrix, Vector}\n\n\nelement_stencil(_, _, _)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/implementations/Tet4.jl:3.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.element_stencil-Union{Tuple{Ftype}, Tuple{Itype}, Tuple{Tri3, Type{Itype}, Type{Ftype}}} where {Itype<:Integer, Ftype<:AbstractFloat}","page":"Index","title":"ReferenceFiniteElements.element_stencil","text":"element_stencil(\n    _::Tri3,\n    _::Type{Itype<:Integer},\n    _::Type{Ftype<:AbstractFloat}\n) -> Tuple{Matrix, Matrix, Any, Vector}\n\n\nelement_stencil(_, _, _)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/implementations/Tri3.jl:3.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.element_stencil-Union{Tuple{Ftype}, Tuple{Itype}, Tuple{Tri6, Type{Itype}, Type{Ftype}}} where {Itype<:Integer, Ftype<:AbstractFloat}","page":"Index","title":"ReferenceFiniteElements.element_stencil","text":"element_stencil(\n    _::Tri6,\n    _::Type{Itype<:Integer},\n    _::Type{Ftype<:AbstractFloat}\n) -> Tuple{Matrix, Matrix, Any, Vector}\n\n\nelement_stencil(_, _, _)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/implementations/Tri6.jl:3.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.element_type-Union{Tuple{ReferenceFE{Itype, Ftype, N, D, Q, RefFE, S, VOM, M1, M2, V}}, Tuple{V}, Tuple{M2}, Tuple{M1}, Tuple{VOM}, Tuple{S}, Tuple{RefFE}, Tuple{Q}, Tuple{D}, Tuple{N}, Tuple{Ftype}, Tuple{Itype}} where {Itype, Ftype, N, D, Q, RefFE<:ReferenceFiniteElements.ReferenceFEType, S, VOM, M1, M2, V}","page":"Index","title":"ReferenceFiniteElements.element_type","text":"element_type(\n    _::ReferenceFE{Itype, Ftype, N, D, Q, RefFE<:ReferenceFiniteElements.ReferenceFEType, S, VOM, M1, M2, V}\n) -> Type{RefFE} where RefFE<:ReferenceFiniteElements.ReferenceFEType\n\n\nReturns the element type\n\nelement_type(_)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/ReferenceFEs.jl:131.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.float_type-Union{Tuple{ReferenceFE{Itype, Ftype, N, D, Q, RefFE, S, VOM, M1, M2, V}}, Tuple{V}, Tuple{M2}, Tuple{M1}, Tuple{VOM}, Tuple{S}, Tuple{RefFE}, Tuple{Q}, Tuple{D}, Tuple{N}, Tuple{Ftype}, Tuple{Itype}} where {Itype, Ftype, N, D, Q, RefFE<:ReferenceFiniteElements.ReferenceFEType, S, VOM, M1, M2, V}","page":"Index","title":"ReferenceFiniteElements.float_type","text":"float_type(\n    _::ReferenceFE{Itype, Ftype, N, D, Q, RefFE<:ReferenceFiniteElements.ReferenceFEType, S, VOM, M1, M2, V}\n) -> Any\n\n\nReturns the float type used to store nodal coordinates and interpolation arrays\n\nfloat_type(_)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/ReferenceFEs.jl:153.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.int_type-Union{Tuple{ReferenceFE{Itype, Ftype, N, D, Q, RefFE, S, VOM, M1, M2, V}}, Tuple{V}, Tuple{M2}, Tuple{M1}, Tuple{VOM}, Tuple{S}, Tuple{RefFE}, Tuple{Q}, Tuple{D}, Tuple{N}, Tuple{Ftype}, Tuple{Itype}} where {Itype, Ftype, N, D, Q, RefFE<:ReferenceFiniteElements.ReferenceFEType, S, VOM, M1, M2, V}","page":"Index","title":"ReferenceFiniteElements.int_type","text":"int_type(\n    _::ReferenceFE{Itype, Ftype, N, D, Q, RefFE<:ReferenceFiniteElements.ReferenceFEType, S, VOM, M1, M2, V}\n) -> Any\n\n\nReturns the integer type used to store node ids and such\n\nint_type(_)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/ReferenceFEs.jl:146.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.num_dimensions-Tuple{ReferenceFE}","page":"Index","title":"ReferenceFiniteElements.num_dimensions","text":"num_dimensions(e::ReferenceFE) -> Any\n\n\nReturns number of dimensions\n\nnum_dimensions(e)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/ReferenceFEs.jl:159.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.num_dimensions-Union{Tuple{ReferenceFiniteElements.ReferenceFEType{N, D, Q}}, Tuple{Q}, Tuple{D}, Tuple{N}} where {N, D, Q}","page":"Index","title":"ReferenceFiniteElements.num_dimensions","text":"num_dimensions(\n    _::ReferenceFiniteElements.ReferenceFEType{N, D, Q}\n) -> Any\n\n\nReturns the number of dimensions for a ReferenceFEType\n\nnum_dimensions(_)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/ReferenceFETypes.jl:20.\n\nnum_dimensions(e)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/ReferenceFEs.jl:159.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.num_nodes-Union{Tuple{ReferenceFiniteElements.ReferenceFEType{N, D, Q}}, Tuple{Q}, Tuple{D}, Tuple{N}} where {N, D, Q}","page":"Index","title":"ReferenceFiniteElements.num_nodes","text":"num_nodes(\n    _::ReferenceFiniteElements.ReferenceFEType{N, D, Q}\n) -> Any\n\n\nReturns the number of nodes for a ReferenceFEType\n\nnum_nodes(_)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/ReferenceFETypes.jl:15.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.num_nodes_per_element-Tuple{ReferenceFE}","page":"Index","title":"ReferenceFiniteElements.num_nodes_per_element","text":"num_nodes_per_element(e::ReferenceFE) -> Any\n\n\nReturns number of nodes per element\n\nnum_nodes_per_element(e)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/ReferenceFEs.jl:164.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.num_q_points-Tuple{ReferenceFE}","page":"Index","title":"ReferenceFiniteElements.num_q_points","text":"num_q_points(e::ReferenceFE) -> Any\n\n\nReturns number of quadrature points\n\nnum_q_points(e)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/ReferenceFEs.jl:169.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.num_q_points-Union{Tuple{ReferenceFiniteElements.ReferenceFEType{N, D, Q}}, Tuple{Q}, Tuple{D}, Tuple{N}} where {N, D, Q}","page":"Index","title":"ReferenceFiniteElements.num_q_points","text":"num_q_points(\n    _::ReferenceFiniteElements.ReferenceFEType{N, D, Q}\n) -> Any\n\n\nReturns the number of quadrature porints for a ReferenceFEType\n\nnum_q_points(_)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/ReferenceFETypes.jl:25.\n\nnum_q_points(e)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/ReferenceFEs.jl:169.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.quadrature_points-Tuple{ReferenceFE}","page":"Index","title":"ReferenceFiniteElements.quadrature_points","text":"quadrature_points(e::ReferenceFE) -> Any\n\n\nReturns all quadrature points\n\nquadrature_points(e)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/ReferenceFEs.jl:76.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.quadrature_points_and_weights-Union{Tuple{E}, Tuple{T}, Tuple{A}, Tuple{E, Type{A}, Type{T}}} where {A<:Union{StaticArraysCore.SVector, StaticArraysCore.MVector}, T<:Number, E<:ReferenceFiniteElements.AbstractHex}","page":"Index","title":"ReferenceFiniteElements.quadrature_points_and_weights","text":"quadrature_points_and_weights(\n    e::ReferenceFiniteElements.AbstractHex,\n    _::Type{A<:Union{StaticArraysCore.SVector, StaticArraysCore.MVector}},\n    _::Type{T<:Number}\n) -> Tuple{Any, Any}\n\n\nquadrature_points_and_weights(e, _, _)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/implementations/HexCommon.jl:18.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.quadrature_points_and_weights-Union{Tuple{T}, Tuple{A}, Tuple{E}, Tuple{E, Type{A}, Type{T}}} where {E<:ReferenceFiniteElements.AbstractQuad, A<:Union{StaticArraysCore.SVector, StaticArraysCore.MVector}, T<:Number}","page":"Index","title":"ReferenceFiniteElements.quadrature_points_and_weights","text":"quadrature_points_and_weights(\n    e::ReferenceFiniteElements.AbstractQuad,\n    _::Type{A<:Union{StaticArraysCore.SVector, StaticArraysCore.MVector}},\n    _::Type{T<:Number}\n) -> Tuple{Any, Any}\n\n\nquadrature_points_and_weights(e, _, _)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/implementations/QuadCommon.jl:41.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.quadrature_weights-Tuple{ReferenceFE}","page":"Index","title":"ReferenceFiniteElements.quadrature_weights","text":"quadrature_weights(e::ReferenceFE) -> Any\n\n\nReturns all quadrature weights\n\nquadrature_weights(e)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/ReferenceFEs.jl:87.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.setup_interpolants_simplex_tri!-NTuple{6, Any}","page":"Index","title":"ReferenceFiniteElements.setup_interpolants_simplex_tri!","text":"setup_interpolants_simplex_tri!(\n    Ns,\n    ∇N_ξs,\n    ∇∇N_ξs,\n    e,\n    ξs,\n    coordinates\n)\n\n\nsetup_interpolants_simplex_tri!(\n    Ns,\n    ∇N_ξs,\n    ∇∇N_ξs,\n    e,\n    ξs,\n    coordinates\n)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/implementations/SimplexTri.jl:48.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.setup_quad_quadrature_weights!-Tuple{Any, Any}","page":"Index","title":"ReferenceFiniteElements.setup_quad_quadrature_weights!","text":"setup_quad_quadrature_weights!(w_return, ws)\n\n\nsetup_quad_quadrature_weights!(w_return, ws)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/implementations/QuadCommon.jl:27.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.shape_function_gradients-Tuple{ReferenceFE, Int64}","page":"Index","title":"ReferenceFiniteElements.shape_function_gradients","text":"shape_function_gradients(e::ReferenceFE, q::Int64) -> Any\n\n\nReturns a specific quadrature point's shape function gradient indexed by q\n\nshape_function_gradients(e, q)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/ReferenceFEs.jl:113.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.shape_function_gradients-Tuple{ReferenceFE}","page":"Index","title":"ReferenceFiniteElements.shape_function_gradients","text":"shape_function_gradients(e::ReferenceFE) -> Any\n\n\nReturns all shape function gradients\n\nshape_function_gradients(e)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/ReferenceFEs.jl:108.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.shape_function_gradients-Union{Tuple{A2}, Tuple{A1}, Tuple{Hex8, Type{A1}, A2}} where {A1<:Union{StaticArraysCore.MMatrix, StaticArraysCore.SMatrix}, A2<:(AbstractVector{<:Number})}","page":"Index","title":"ReferenceFiniteElements.shape_function_gradients","text":"shape_function_gradients(\n    e::Hex8,\n    _::Type{A1<:Union{StaticArraysCore.MMatrix, StaticArraysCore.SMatrix}},\n    ξ::AbstractVector{<:Number}\n) -> Any\n\n\nshape_function_gradients(e, _, ξ)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/implementations/Hex8.jl:110.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.shape_function_gradients-Union{Tuple{A2}, Tuple{A1}, Tuple{Quad4, Type{A1}, A2}} where {A1<:Union{StaticArraysCore.MMatrix, StaticArraysCore.SMatrix}, A2<:(AbstractVector{<:Number})}","page":"Index","title":"ReferenceFiniteElements.shape_function_gradients","text":"shape_function_gradients(\n    e::Quad4,\n    _::Type{A1<:Union{StaticArraysCore.MMatrix, StaticArraysCore.SMatrix}},\n    ξ::AbstractVector{<:Number}\n) -> Any\n\n\nshape_function_gradients(e, _, ξ)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/implementations/Quad4.jl:34.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.shape_function_gradients-Union{Tuple{A2}, Tuple{A1}, Tuple{Quad9, Type{A1}, A2}} where {A1<:Union{StaticArraysCore.MMatrix, StaticArraysCore.SMatrix}, A2<:(AbstractVector{<:Number})}","page":"Index","title":"ReferenceFiniteElements.shape_function_gradients","text":"shape_function_gradients(\n    e::Quad9,\n    _::Type{A1<:Union{StaticArraysCore.MMatrix, StaticArraysCore.SMatrix}},\n    ξ::AbstractVector{<:Number}\n) -> Any\n\n\nshape_function_gradients(e, _, ξ)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/implementations/Quad9.jl:58.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.shape_function_gradients-Union{Tuple{A2}, Tuple{A1}, Tuple{Tet10, Type{A1}, A2}} where {A1<:Union{StaticArraysCore.MMatrix, StaticArraysCore.SMatrix}, A2<:(AbstractVector{<:Number})}","page":"Index","title":"ReferenceFiniteElements.shape_function_gradients","text":"shape_function_gradients(\n    e::Tet10,\n    _::Type{A1<:Union{StaticArraysCore.MMatrix, StaticArraysCore.SMatrix}},\n    ξ::AbstractVector{<:Number}\n) -> Any\n\n\nshape_function_gradients(e, _, ξ)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/implementations/Tet10.jl:111.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.shape_function_gradients-Union{Tuple{A2}, Tuple{A1}, Tuple{Tet4, Type{A1}, A2}} where {A1<:Union{StaticArraysCore.MMatrix, StaticArraysCore.SMatrix}, A2<:(AbstractVector{<:Number})}","page":"Index","title":"ReferenceFiniteElements.shape_function_gradients","text":"shape_function_gradients(\n    e::Tet4,\n    _::Type{A1<:Union{StaticArraysCore.MMatrix, StaticArraysCore.SMatrix}},\n    ξ::AbstractVector{<:Number}\n) -> Any\n\n\nshape_function_gradients(e, _, ξ)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/implementations/Tet4.jl:77.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.shape_function_gradients-Union{Tuple{A2}, Tuple{A1}, Tuple{Tri3, Type{A1}, A2}} where {A1<:Union{StaticArraysCore.MMatrix, StaticArraysCore.SMatrix}, A2<:(AbstractVector{<:Number})}","page":"Index","title":"ReferenceFiniteElements.shape_function_gradients","text":"shape_function_gradients(\n    e::Tri3,\n    _::Type{A1<:Union{StaticArraysCore.MMatrix, StaticArraysCore.SMatrix}},\n    ξ::AbstractVector{<:Number}\n) -> Any\n\n\nshape_function_gradients(e, _, ξ)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/implementations/Tri3.jl:33.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.shape_function_gradients-Union{Tuple{A2}, Tuple{A1}, Tuple{Tri6, Type{A1}, A2}} where {A1<:Union{StaticArraysCore.MMatrix, StaticArraysCore.SMatrix}, A2<:(AbstractArray{<:Number})}","page":"Index","title":"ReferenceFiniteElements.shape_function_gradients","text":"shape_function_gradients(\n    e::Tri6,\n    _::Type{A1<:Union{StaticArraysCore.MMatrix, StaticArraysCore.SMatrix}},\n    ξ::AbstractArray{<:Number}\n) -> Any\n\n\nshape_function_gradients(e, _, ξ)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/implementations/Tri6.jl:55.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.shape_function_hessians-Tuple{ReferenceFE, Int64}","page":"Index","title":"ReferenceFiniteElements.shape_function_hessians","text":"shape_function_hessians(e::ReferenceFE, i::Int64) -> Any\n\n\nReturns a specific quadrature point's shape function hessian indexed by q\n\nshape_function_hessians(e, i)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/ReferenceFEs.jl:123.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.shape_function_hessians-Tuple{ReferenceFE}","page":"Index","title":"ReferenceFiniteElements.shape_function_hessians","text":"shape_function_hessians(e::ReferenceFE) -> Any\n\n\nReturns all shape function hessians\n\nshape_function_hessians(e)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/ReferenceFEs.jl:118.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.shape_function_hessians-Union{Tuple{A2}, Tuple{A1}, Tuple{Hex8, Type{A1}, A2}} where {A1<:Union{StaticArraysCore.MArray, StaticArraysCore.SArray}, A2<:(AbstractVector{<:Number})}","page":"Index","title":"ReferenceFiniteElements.shape_function_hessians","text":"shape_function_hessians(\n    e::Hex8,\n    _::Type{A1<:Union{StaticArraysCore.MArray, StaticArraysCore.SArray}},\n    ξ::AbstractVector{<:Number}\n) -> Any\n\n\nshape_function_hessians(e, _, ξ)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/implementations/Hex8.jl:147.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.shape_function_hessians-Union{Tuple{A2}, Tuple{A1}, Tuple{Quad4, Type{A1}, A2}} where {A1<:Union{StaticArraysCore.MArray, StaticArraysCore.SArray}, A2<:(AbstractVector{<:Number})}","page":"Index","title":"ReferenceFiniteElements.shape_function_hessians","text":"shape_function_hessians(\n    e::Quad4,\n    _::Type{A1<:Union{StaticArraysCore.MArray, StaticArraysCore.SArray}},\n    ξ::AbstractVector{<:Number}\n) -> Any\n\n\nshape_function_hessians(e, _, ξ)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/implementations/Quad4.jl:53.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.shape_function_hessians-Union{Tuple{A2}, Tuple{A1}, Tuple{Quad9, Type{A1}, A2}} where {A1<:Union{StaticArraysCore.MArray, StaticArraysCore.SArray}, A2<:(AbstractVector{<:Number})}","page":"Index","title":"ReferenceFiniteElements.shape_function_hessians","text":"shape_function_hessians(\n    e::Quad9,\n    _::Type{A1<:Union{StaticArraysCore.MArray, StaticArraysCore.SArray}},\n    ξ::AbstractVector{<:Number}\n) -> Any\n\n\nshape_function_hessians(e, _, ξ)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/implementations/Quad9.jl:88.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.shape_function_hessians-Union{Tuple{A2}, Tuple{A1}, Tuple{Tet10, Type{A1}, A2}} where {A1<:Union{StaticArraysCore.MArray, StaticArraysCore.SArray}, A2<:(AbstractVector{<:Number})}","page":"Index","title":"ReferenceFiniteElements.shape_function_hessians","text":"shape_function_hessians(\n    e::Tet10,\n    _::Type{A1<:Union{StaticArraysCore.MArray, StaticArraysCore.SArray}},\n    ξ::AbstractVector{<:Number}\n) -> Any\n\n\nshape_function_hessians(e, _, ξ)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/implementations/Tet10.jl:157.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.shape_function_hessians-Union{Tuple{A2}, Tuple{A1}, Tuple{Tet4, Type{A1}, A2}} where {A1<:Union{StaticArraysCore.MArray, StaticArraysCore.SArray}, A2<:(AbstractVector{<:Number})}","page":"Index","title":"ReferenceFiniteElements.shape_function_hessians","text":"shape_function_hessians(\n    e::Tet4,\n    _::Type{A1<:Union{StaticArraysCore.MArray, StaticArraysCore.SArray}},\n    ξ::AbstractVector{<:Number}\n) -> Any\n\n\nshape_function_hessians(e, _, ξ)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/implementations/Tet4.jl:91.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.shape_function_hessians-Union{Tuple{A2}, Tuple{A1}, Tuple{Tri3, Type{A1}, A2}} where {A1<:Union{StaticArraysCore.MArray, StaticArraysCore.SArray}, A2<:(AbstractVector{<:Number})}","page":"Index","title":"ReferenceFiniteElements.shape_function_hessians","text":"shape_function_hessians(\n    e::Tri3,\n    _::Type{A1<:Union{StaticArraysCore.MArray, StaticArraysCore.SArray}},\n    ξ::AbstractVector{<:Number}\n) -> Any\n\n\nshape_function_hessians(e, _, ξ)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/implementations/Tri3.jl:44.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.shape_function_hessians-Union{Tuple{A2}, Tuple{A1}, Tuple{Tri6, Type{A1}, A2}} where {A1<:Union{StaticArraysCore.MArray, StaticArraysCore.SArray}, A2<:(AbstractVector{<:Number})}","page":"Index","title":"ReferenceFiniteElements.shape_function_hessians","text":"shape_function_hessians(\n    e::Tri6,\n    _::Type{A1<:Union{StaticArraysCore.MArray, StaticArraysCore.SArray}},\n    ξ::AbstractVector{<:Number}\n) -> Any\n\n\nshape_function_hessians(e, _, ξ)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/implementations/Tri6.jl:78.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.shape_function_values-Tuple{ReferenceFE, Int64}","page":"Index","title":"ReferenceFiniteElements.shape_function_values","text":"shape_function_values(e::ReferenceFE, q::Int64) -> Any\n\n\nReturns a specific quadrature point's shape function value indexed by q\n\nshape_function_values(e, q)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/ReferenceFEs.jl:103.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.shape_function_values-Tuple{ReferenceFE}","page":"Index","title":"ReferenceFiniteElements.shape_function_values","text":"shape_function_values(e::ReferenceFE) -> Any\n\n\nReturns all shape function values\n\nshape_function_values(e)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/ReferenceFEs.jl:98.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.shape_function_values-Union{Tuple{A2}, Tuple{A1}, Tuple{Quad4, Type{A1}, A2}} where {A1<:Union{StaticArraysCore.SVector, StaticArraysCore.MVector}, A2<:(AbstractVector{<:Number})}","page":"Index","title":"ReferenceFiniteElements.shape_function_values","text":"shape_function_values(\n    e::Quad4,\n    _::Type{A1<:Union{StaticArraysCore.SVector, StaticArraysCore.MVector}},\n    ξ::AbstractVector{<:Number}\n) -> Any\n\n\nshape_function_values(e, _, ξ)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/implementations/Quad4.jl:21.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.shape_function_values-Union{Tuple{A2}, Tuple{A1}, Tuple{Quad9, Type{A1}, A2}} where {A1<:Union{StaticArraysCore.SVector, StaticArraysCore.MVector}, A2<:(AbstractVector{<:Number})}","page":"Index","title":"ReferenceFiniteElements.shape_function_values","text":"shape_function_values(\n    e::Quad9,\n    _::Type{A1<:Union{StaticArraysCore.SVector, StaticArraysCore.MVector}},\n    ξ::AbstractVector{<:Number}\n) -> Any\n\n\nshape_function_values(e, _, ξ)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/implementations/Quad9.jl:40.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.shape_function_values-Union{Tuple{A2}, Tuple{A1}, Tuple{Tet10, Type{A1}, A2}} where {A1<:Union{StaticArraysCore.SVector, StaticArraysCore.MVector}, A2<:(AbstractVector{<:Number})}","page":"Index","title":"ReferenceFiniteElements.shape_function_values","text":"shape_function_values(\n    e::Tet10,\n    _::Type{A1<:Union{StaticArraysCore.SVector, StaticArraysCore.MVector}},\n    ξ::AbstractVector{<:Number}\n) -> Any\n\n\nshape_function_values(e, _, ξ)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/implementations/Tet10.jl:88.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.shape_function_values-Union{Tuple{A2}, Tuple{A1}, Tuple{Tet4, Type{A1}, A2}} where {A1<:Union{StaticArraysCore.SVector, StaticArraysCore.MVector}, A2<:(AbstractVector{<:Number})}","page":"Index","title":"ReferenceFiniteElements.shape_function_values","text":"shape_function_values(\n    e::Tet4,\n    _::Type{A1<:Union{StaticArraysCore.SVector, StaticArraysCore.MVector}},\n    ξ::AbstractVector{<:Number}\n) -> Any\n\n\nshape_function_values(e, _, ξ)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/implementations/Tet4.jl:64.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.shape_function_values-Union{Tuple{A2}, Tuple{A1}, Tuple{Tri3, Type{A1}, A2}} where {A1<:Union{StaticArraysCore.SVector, StaticArraysCore.MVector}, A2<:(AbstractVector{<:Number})}","page":"Index","title":"ReferenceFiniteElements.shape_function_values","text":"shape_function_values(\n    e::Tri3,\n    _::Type{A1<:Union{StaticArraysCore.SVector, StaticArraysCore.MVector}},\n    ξ::AbstractVector{<:Number}\n) -> Any\n\n\nshape_function_values(e, _, ξ)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/implementations/Tri3.jl:21.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.shape_function_values-Union{Tuple{A2}, Tuple{A1}, Tuple{Tri6, Type{A1}, A2}} where {A1<:Union{StaticArraysCore.SVector, StaticArraysCore.MVector}, A2<:(AbstractVector{<:Number})}","page":"Index","title":"ReferenceFiniteElements.shape_function_values","text":"shape_function_values(\n    e::Tri6,\n    _::Type{A1<:Union{StaticArraysCore.SVector, StaticArraysCore.MVector}},\n    ξ::AbstractVector{<:Number}\n) -> Any\n\n\nshape_function_values(e, _, ξ)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/implementations/Tri6.jl:39.\n\n\n\n\n\n","category":"method"},{"location":"#ReferenceFiniteElements.vertex_nodes-Union{Tuple{ReferenceFE{Itype, Ftype, N, D, Q, RefFE, S, VOM, M1, M2, V}}, Tuple{V}, Tuple{M2}, Tuple{M1}, Tuple{VOM}, Tuple{S}, Tuple{RefFE}, Tuple{Q}, Tuple{D}, Tuple{N}, Tuple{Ftype}, Tuple{Itype}} where {Itype, Ftype, N, D, Q, RefFE<:ReferenceFiniteElements.ReferenceFEType, S, VOM, M1, M2, V}","page":"Index","title":"ReferenceFiniteElements.vertex_nodes","text":"vertex_nodes(\n    _::ReferenceFE{Itype, Ftype, N, D, Q, RefFE<:ReferenceFiniteElements.ReferenceFEType, S, VOM, M1, M2, V}\n) -> Base.OneTo\n\n\nReturns the nodes of vertices TODO this is probably not very useful\n\nvertex_nodes(_)\n\ndefined at /home/runner/work/ReferenceFiniteElements.jl/ReferenceFiniteElements.jl/src/ReferenceFEs.jl:139.\n\n\n\n\n\n","category":"method"},{"location":"extensions/#ReferenceFiniteElementsAdaptExt","page":"Extensions","title":"ReferenceFiniteElementsAdaptExt","text":"","category":"section"},{"location":"extensions/","page":"Extensions","title":"Extensions","text":"For using ReferenceFiniteElements on GPUs. So far only tested with CUDA.jl as the GPU backend.","category":"page"},{"location":"extensions/#ReferenceFiniteElementsExodusExt","page":"Extensions","title":"ReferenceFiniteElementsExodusExt","text":"","category":"section"},{"location":"extensions/","page":"Extensions","title":"Extensions","text":"Convenience methods for setting up ReferenceFEs based on an Exodus block. Really only useful if you use exodusII mesh types.","category":"page"},{"location":"extensions/#ReferenceFiniteElementsRecipesBaseExt","page":"Extensions","title":"ReferenceFiniteElementsRecipesBaseExt","text":"","category":"section"},{"location":"extensions/","page":"Extensions","title":"Extensions","text":"Plotting tools for educational purposes. To use, try the following","category":"page"},{"location":"extensions/","page":"Extensions","title":"Extensions","text":"using ReferenceFiniteElements, Plots, LaTeXStrings\nre = ReferenceFE(Tri6(2))\nplot(re) # plots nodes and edges of element along with quadrature points\nplot(re, 1) # plots shape function values. The index is the shape function index\nplot(re, 1, 1) # plots shape function gradients. The first index is for the index, second is for dimension\nplot(re, 1, 1, 1) # plots shape function hessians. The first index  is for the shape function index and the second and third are for dimensions","category":"page"}]
}
